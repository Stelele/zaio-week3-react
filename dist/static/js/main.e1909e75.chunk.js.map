{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","createReduxStore.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","momemnt","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","moment","time","fromNow","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initialState","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","userFirestoreForProfile","userProfile","attachAuthIsReady","rrfProps","config","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e1909e75.chunk.js","sourcesContent":["  \r\nimport React, { Profiler } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  \r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n            {props.profile.initials}\r\n        </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n  \r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n  \r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then((resp) => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }\r\n\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Signup</NavLink></li>\r\n        <li><NavLink to='/signin'>Login</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const {auth, profile} = props\r\n  \r\n  const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","  \r\nimport React from 'react'\r\nimport momemnt from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName} </p>\r\n        <p className=\"grey-text\">Created {momemnt(project.createdAt.toDate()).calendar()} </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} >\r\n            <ProjectSummary project={project} key={project.id} />\r\n          </Link>\r\n        )\r\n      })}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const {notifications} = props\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul>\r\n            { notifications && notifications.map(item => {\r\n              return (\r\n                <li key = {item.id}>\r\n                  <span className=\"pink-text\"> {item.user} </span>\r\n                  <span> {item.content} </span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect} from 'react-redux-firebase'\r\nimport {compose}  from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nclass Dashboard extends Component {\r\n  render() {\r\n    \r\n    // console.log(this.props);\r\n    const { projects, auth, notifications } = this.props;\r\n    if(!auth.uid){\r\n      return <Redirect to='/signin' />\r\n    }\r\n    \r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications= {notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects', orderBy:['createdAt', 'desc']},\r\n    {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ])\r\n  //firestoreConnect(() => ['projects', 'notifications'])\r\n)(Dashboard)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const {project, auth} = props\r\n\r\n  if (project){\r\n    if(!auth.uid){\r\n      return <Redirect to='/signin' />\r\n    }\r\n    return(\r\n    <div className=\"container section project-details\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>{project.content}</p>\r\n        </div>\r\n        <div className=\"card-action grey lighten-4 grey-text\">\r\n  <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n          <div>Created {moment(project.createdAt.toDate()).calendar()}  </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project ...</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(() => ['projects'])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const {authError ,auth} = this.props\r\n\r\n    if(auth.uid){\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p> {authError} </p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport{Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n  }\r\n  render() {\r\n    const {auth, authError} = this.props\r\n    if(auth.uid){\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p> {authError} </p>  : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapPropsToState = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapPropsToState, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\n// import { auth } from 'firebase'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const {auth} = this.props\r\n\r\n    if(!auth.uid){\r\n      return <Redirect to='/signin' />\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps =  dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n  return (dispatch, getState, {getFirebase,getFirestore}) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile\r\n    const authorId = getState().firebase.auth.uid\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProjectDetails from './components/projects/ProjectDetails'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/projects/CreateProject'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/'component={Dashboard} />\r\n            <Route path='/project/:id' component={ProjectDetails} />\r\n            <Route path='/signin' component={SignIn} />\r\n            <Route path='/signup' component={SignUp} />\r\n            <Route path='/create' component={CreateProject} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","  \r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n  projects: [\r\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('create project success',action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error',action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer\r\n\r\n// the key name will be the data property on the state object","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Replace this with your own config details\r\nvar fbConfig = {\r\n  apiKey: \"AIzaSyAn8NktnjkCtE001FOOv3cY_TluKrHvWQk\",\r\n  authDomain: \"marioplan-zaio.firebaseapp.com\",\r\n  databaseURL: \"https://marioplan-zaio.firebaseio.com\",\r\n  projectId: \"marioplan-zaio\",\r\n  storageBucket: \"marioplan-zaio.appspot.com\",\r\n  messagingSenderId: \"870898481773\",\r\n  appId: \"1:870898481773:web:e3953950d52c1d937a9d64\",\r\n  measurementId: \"G-9YEXLDWVF5\"\r\n};\r\nfirebase.initializeApp(fbConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import { createStore } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\r\n\r\nimport fbConfig from './config/fbConfig'\r\nconst initialState = {}\r\n\r\nexport default () => {\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n       compose(\r\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),// redux binding for firebase\r\n        reduxFirestore(fbConfig, {userFirestoreForProfile: true, userProfile:'users', attachAuthIsReady: true}),\r\n        //reactReduxFirebase() // redux bindings for firestore\r\n       )\r\n    ); \r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport createReduxStore from './createReduxStore'\r\n import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\r\nimport{createFirestoreInstance} from 'redux-firestore'\r\n\r\n\r\nconst rrfConfig = { \r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true \r\n} // react-redux-firebase config\r\n\r\n\r\nconst store = createReduxStore()\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n   createFirestoreInstance // <- needed if using firestore\r\n}\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n    <App />\r\n    </ReactReduxFirebaseProvider>\r\n    </Provider>, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}